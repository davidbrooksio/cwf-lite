@layer cwf-modules {
  .input {
    margin: var(--input-margin-top, 0) var(--input-margin-right, auto)
      var(--input-margin-bottom, 1ch) var(--input-margin-left, auto);
    width: var(--input-width, 100%);

    &:not(progress) {
      appearance: var(--input-appearance, auto);
      background-color: var(--input-background-color, white);
      border-color: var(--input-border-color, LightGrey);
      border-radius: var(--input-border-radius, 4px);
      border-style: var(--input-border-style, solid);
      border-width: var(--input-border-width, 1px);
      box-shadow: var(--input-box-shadow, none);
      color: var(--input-color, DimGrey);
      cursor: var(--input-cursor, auto);
      font-family: var(--input-font-family, system-ui);
      font-weight: var(--input-font-weight, 400);
      height: var(--input-height, auto);
      line-height: var(--input-line-height, 1.15);
      outline: var(--input-outline, 0);
      padding: var(--input-padding-y, 1ch) var(--input-padding-x, 2ch);
      vertical-align: var(--input-vertical-align, initial);
    }

    &::placeholder {
      color: var(--input-placeholder-color, LightGrey);
    }

    &[disabled] {
      background-color: var(--input-disabled-background-color, WhiteSmoke);
    }

    &:not(output):not([disabled]) {
      &:hover {
        border-color: var(--input-hover-border-color, grey);
        color: var(--input-hover-color, DimGrey);
      }

      &:focus-visible,
      &:focus {
        border-color: var(--input-focus-border-color, grey);
        box-shadow: var(
          --input-focus-box-shadow,
          0 0 0 0.25em rgb(0 0 0 / 0.125)
        );
        color: var(--input-focus-color, DimGrey);
      }
    }

    &[type="checkbox"],
    &[type="radio"] {
      appearance: var(--input-appearance, none);
      background-size: var(--input-background-size, contain);
      cursor: var(--input-cursor, pointer);
      padding: var(--input-padding-y, 1ch) var(--input-padding-x, 1ch);
      vertical-align: var(--input-vertical-align, top);
      width: var(--input-width, auto);

      &:checked {
        background-color: var(--input-background-color, DimGrey);
      }

      &:focus {
        box-shadow: var(
          --input-focus-box-shadow,
          0 0 0 0.25em rgb(0 0 0 / 0.125)
        );
      }
    }

    &[type="checkbox"] {
      &:checked {
        background-image: var(
          --input-checkbox-background-image,
          url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e")
        );
      }
    }

    &[type="radio"] {
      border-radius: var(--input-border-radius, 50%);

      &:checked {
        background-image: var(
          --input-radio-background-image,
          url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e")
        );
      }
    }

    &:is(select) {
      &[multiple] {
        padding: var(--input-padding-y, 0) var(--input-padding-x, 0);

        & option {
          padding: var(--option-padding-y, 1ch) var(--option-padding-x, 2ch);
        }
      }
    }

    &:is(progress) {
      appearance: var(--input-appearance, none);
      border-color: var(--input-border-color, LightGrey);
      border-radius: var(--input-border-radius, 10px);
      border-style: var(--input-border-style, solid);
      border-width: var(--input-border-width, 1px);
      background: var(--input-background-color, WhiteSmoke);

      &::-webkit-progress-bar {
        border-radius: var(--input-border-radius, 10px);
        background: var(--input-background-color, WhiteSmoke);
      }

      &::-webkit-progress-value {
        border-radius: var(--input-border-radius, 10px);
        background: var(--input-color, grey);
      }

      &::-moz-progress-bar {
        border-radius: var(--input-border-radius, 10px);
        background: var(--input-color, grey);
      }
    }

    &:is(output) {
      display: var(--input-display, block);
      /* fix for output height */
      &::before {
        content: "";
        display: inline-block;
        vertical-align: middle;
        height: 100%;
        pointer-events: none;
      }
    }
  }

  .label {
    display: var(--label-display, inline-flex);
    color: var(--label-color, DimGrey);
    font-family: var(--label-font-family, system-ui);
    font-weight: var(--label-font-weight, 400);
    margin: var(--label-margin-top, 0) var(--label-margin-right, auto)
      var(--label-margin-bottom, 0.25ch) var(--label-margin-left, auto);
    width: var(--label-width, 100%);
  }
}
